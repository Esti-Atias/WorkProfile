version: '3.8'

networks:
  frontend_network:
  backend_network:

volumes:
  db_data:

services:
  db:
    image: mysql:8.0
    container_name: docker-compose-db-1
    restart: always
    volumes:
      - db_data:/var/lib/mysql
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: flaskapp
      MYSQL_DATABASE: exampleDb
      MYSQL_USER: flaskapp
      MYSQL_PASSWORD: flaskapp
    ports:
      - "3306:3306"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-pflaskapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: ../Dockerfile
    container_name: docker-compose-app-1
    restart: always
    environment:
      DB_HOST: db
      DB_USER: flaskapp
      DB_PASS: flaskapp
      DB_NAME: exampleDb
      APP_PORT: 5000
    ports:
      - "5000:5000"
    networks:
      - backend_network
      - frontend_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: docker-compose-nginx-1
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontend_network
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5